{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": [
      "./tsconfig.json"
    ]
  },
  "plugins": [
    "@typescript-eslint",
    "unused-imports",
    "eslint-plugin-react",
    "require-explicit-generics"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": {
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-ignore": "allow-with-description"
      }
    ],
    "@typescript-eslint/typedef": [
      "warn",
      {
        "arrowParameter": false,
        "variableDeclarationIgnoreFunction": true,
        "variableDeclaration": true
      }
    ],
    "@typescript-eslint/no-inferrable-types": 0,
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": [
          "camelCase",
          "PascalCase",
          "UPPER_CASE"
        ]
      },
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase"
        ]
      },
      {
        "selector": "property",
        "format": []
      },
      {
        "selector": "parameter",
        "format": [
          "camelCase",
          "PascalCase"
        ]
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      }
    ],
    "require-explicit-generics/require-explicit-generics": [
      "error"
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/space-before-blocks": "warn",
    "@typescript-eslint/no-non-null-assertion": "off",
    "react/self-closing-comp": [
      "error",
      {
        "component": true,
        "html": false
      }
    ],
    "newline-before-return": "warn",
    "eol-last": [
      "warn",
      "always"
    ],
    "no-console": "error",
    "no-trailing-spaces": "error",
    "no-multiple-empty-lines": "error",
    "@typescript-eslint/comma-dangle": [
      "error",
      "always-multiline"
    ],
    "@typescript-eslint/explicit-function-return-type": "warn",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "quotes": [
      "Warn",
      "single"
    ],
    "max-len": [
      "warn",
      {
        "code": 160,
        "ignoreUrls": true,
        "ignoreComments": true,
        "ignoreStrings": true
      }
    ],
    "indent": [
      "warn",
      "tab"
    ],
    "max-depth": [
      "error",
      4
    ],
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "semi": [
      "error",
      "always"
    ],
    // avoid AutoSemicolonInsertion tricky cases when Semi:disabled
    "no-unexpected-multiline": "error",
    "react/display-name": "off",
    "react/jsx-max-props-per-line": [
      "warn",
      {
        "maximum": 1,
        "when": "always"
      }
    ]
  },
  "env": {
    "node": true,
    "browser": true,
    "amd": true
  }
}